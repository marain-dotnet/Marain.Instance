# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: CI

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: marain-github

trigger:
  branches:
    include:
    - master
    - feature/*
  tags:
    include:
    - '*'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job:
    displayName: Tag sources
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: templates/install.dotnet-global-tools.workaround.yml@recommended_practices
    - template: templates/install-and-run-gitversion.yml@recommended_practices

    - powershell: |
        Write-Host "##vso[task.setvariable variable=Endjin_IsPreRelease]$((-not ([string]::IsNullOrEmpty($Env:GITVERSION_PRERELEASETAG))))"
        Write-Host "##vso[task.setvariable variable=Endjin_Repository_Name]$Env:BUILD_REPOSITORY_NAME"
      displayName: 'Set Custom Environment Variables'

    - task: GitHubTag@1
      condition: and(succeeded(), or(variables['Endjin.ForcePublish'], eq(variables['GitVersion.PreReleaseTag'], '')))
      displayName: 'Tag Git'
      inputs:
        githubEndpoint: 'marain-github'
        repositoryName: $(Endjin_Repository_Name)
        commmit: 'Release v$(GitVersion.SemVer)'
        tag: '$(GitVersion.SemVer)'

  - job: Snapshot_Deploy_Sources
    displayName: Snapshot deployment sources for pipeline
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - publish: $(Build.SourcesDirectory)/Solutions
      artifact: marain_instance


- stage: deploy_to_jd
  variables:
    Endjin_AzureLocation: uksouth
    Endjin_SubscriptionId: 13821a69-41a3-43ab-9577-1519963ea474
    Endjin_AzureServiceConnection: marjd-ado-spn
    Endjin_EnvironmentSuffix: jd
    Marain_Instance_Type: Development
    Marain_ResourcePrefix: marain
  displayName: Deploy to 'jd' environment stage
  jobs:
  - deployment: deploy_jd
    displayName: Deploy to 'jd' environment  
    pool:
      vmImage: 'ubuntu-latest'
    environment: marain_jd
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: marain_instance

          - task: AzurePowerShell@5
            displayName: 'Environment debug'
            inputs:
              azureSubscription: '$(Endjin_AzureServiceConnection)'
              ScriptType: InlineScript
              Inline: |
                Write-Host "*** Environment info:"
                gci env:\ | ft -AutoSize | Out-String | Write-Host
                Write-Host "*** Vars info:"
                gci variable:\ | ft -AutoSize | Out-String | Write-Host
                Write-Host "*** Module info:"
                Get-Module -ListAvailable | Select Name,Version,Path
              preferredAzurePowerShellVersion: '2.6.0'
              pwsh: true

          - template: azurepipeline-templates/deploy-marain-instance.yml
            parameters:
              azureServiceConnection: $(Endjin_AzureServiceConnection)
              azureSubscriptionId: $(Endjin_SubscriptionId)
              azureTenantId: $(Endjin_AadTenantId)
              azureLocation: $(Endjin_AzureLocation)
              marainEnvironmentSuffix: $(Endjin_EnvironmentSuffix)
              marainInstanceType: $(Marain_Instance_Type)
              marainResourcePrefix: $(Marain_ResourcePrefix)
              workingDirectory: $(Pipeline.Workspace)/marain_instance/Marain.Instance.Deployment
